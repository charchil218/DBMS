CREATE TABLE employee(
    emp_id INT PRIMARY KEY,
    first_name VARCHAR(20),
    last_name VARCHAR(20),
    birth_date DATE,
    sex VARCHAR(1),
    salary INT,
    super_id INT,
    branch_id INT
);

CREATE TABLE branch(
    branch_id INT PRIMARY kEY,
    branch_name VARCHAR(12),
    mgr_id INT, 
    mgr_start_date DATE,
    FOREIGN KEY(mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL
);

ALTER TABLE employee
ADD FOREIGN KEY(branch_id) REFERENCES branch(branch_id)
ON DELETE SET NULL;

ALTER TABLE employee
ADD FOREIGN KEY(super_id) REFERENCES employee(emp_id)
ON DELETE SET NULL;


CREATE TABLE Client(
    client_id INT PRIMARY KEY,
    client_name VARCHAR(20),
    branch_id INT,
    FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE SET NULL
);


CREATE TABLE work_with(
    emp_id INT ,
    client_id INT ,
    total_sales INT,
    PRIMARY KEY(emp_id,client_id),
    FOREIGN KEY(emp_id) REFERENCES employee(emp_id) ON DELETE CASCADE,
    FOREIGN KEY(client_id) REFERENCES client(client_id) ON DELETE CASCADE
);

CREATE TABLE branch_supplier(
    branch_id INT,
    supplier_name VARCHAR(20),
    supply_type VARCHAR(50),
    PRIMARY KEY(branch_id,supplier_name),
    FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE
);

INSERT INTO employee VALUES(100,'David','Wallace','1967-11-17','M' ,250000 ,NULL ,NULL);
INSERT INTO branch VALUES(1,'CORPORATE',100,'2006-02-09');

UPDATE employee
SET branch_id=1
WHERE emp_id=100 ;



INSERT INTO employee VALUES(101 ,'Jan' ,'Levinson','1961-05-11' ,'F' ,110000 ,100 ,1);

INSERT INTO employee VALUES(102 ,'Michael', 'Scott', '1964-03-15', 'M' ,75000 ,100, NULL);
INSERT INTO branch VALUES(2, 'Scranton', 102, '1992-04-06');

UPDATE employee
SET branch_id=2
WHERE emp_id=102;

INSERT INTO employee VALUES(103 ,'Angela', 'Martin', '1971-06-25','F' ,63000, 102 ,2);
INSERT INTO employee VALUES(104, 'Kelly', 'Kapoor', '1980-02-05', 'F', 55000, 102, 2);
INSERT INTO employee VALUES(105, 'Stanley', 'Hudson', '1958-02-19', 'M', 69000, 102, 2);



INSERT INTO employee VALUES(106, 'Josh', 'Porter', '1969-09-05', 'M', 78000, 100, NULL);
INSERT INTO branch VALUES(3, 'Stamford', 106, '1998-02-13');
UPDATE employee
SET branch_id=3
WHERE emp_id=106;

INSERT INTO employee VALUES(107, 'Andy', 'Bernard', '1973-07-22', 'M', 65000, 106, 3);
INSERT INTO employee VALUES(108, 'Jim', 'Halpert', '1978-10-01', 'M', 71000, 106, 3);


UPDATE employee
SET branch_id=2
WHERE emp_id=103 or emp_id=104 or emp_id=105;

UPDATE employee
SET branch_id=3
WHERE emp_id=107 or emp_id=108 ;

SELECT * FROM employee;
Select * FROM branch;


INSERT INTO client VALUES(400 ,'Dunmore Highschool',NULL);

UPDATE client
SET branch_id=2
WHERE client_id=400;

INSERT INTO client VALUES(401 ,'Lackawana Country',2);

INSERT INTO CLIENT VALUES(402, 'FedEx', NULL);

UPDATE client
SET branch_id=3
WHERE client_id=402;

INSERT INTO CLIENT VALUES(403, 'John Daly Law, LLC',3);
INSERT INTO CLIENT VALUES(404, 'Scranton Whitepages',2);
INSERT INTO CLIENT VALUES(405, 'Times Newspaper',3);
INSERT INTO CLIENT VALUES(406, 'FedEx',2);

SELECT * FROM client;




INSERT INTO branch_supplier VALUES(2, 'Hammer Mill', 'Paper');
INSERT INTO branch_supplier VALUES(2, 'Uni-ball', 'Writing Utensils');
INSERT INTO branch_supplier VALUES(3, 'Patriot Paper', 'Paper');
INSERT INTO branch_supplier VALUES(2, 'J.T. Forms & Labels', 'Custom Forms');
INSERT INTO branch_supplier VALUES(3, 'Uni-ball', 'Writing Utensils');
INSERT INTO branch_supplier VALUES(3, 'Hammer Mill', 'Paper');
INSERT INTO branch_supplier VALUES(3, 'Stamford Lables', 'Custom Forms');

SELECT * FROM branch_supplier;



INSERT INTO work_with VALUES(105, 400, 55000);
INSERT INTO work_with VALUES(102, 401, 267000);
INSERT INTO work_with VALUES(108, 402, 22500);
INSERT INTO work_with VALUES(107, 403, 5000);
INSERT INTO work_with VALUES(108, 403, 12000);
INSERT INTO work_with VALUES(105, 404, 33000);
INSERT INTO work_with VALUES(107, 405, 26000);
INSERT INTO work_with VALUES(102, 406, 15000);
INSERT INTO work_with VALUES(105, 406, 130000); 

SELECT * FROM work_with;


--some more basic queries
--find all employees
SELECT * FROM employee;

---FIND ALL EMPLOYEES ORDERED BY THEIR SALARY

SELECT * FROM employee ORDER BY salary;
SELECT * FROM employee ORDER BY salary DESC;

--FIND ALL EMPLOYEE ORDERED BY SEX THEN NAME

SELECT * FROM employee ORDER BY sex,first_name,last_name;


--FIND FIRST 5 EMPLOYEE FROM THE TABLE
SELECT * FROM employee LIMIT 5;

---FIRST AND LAST NAME OF EMPLOYEE
SELECT first_name,last_name FROM employee;

---SELECT FORENAME AND SURNAME (CHANGING THE NAME OF THE COLUMN)
 SELECT first_name AS forename,last_name AS surname FROM employee;

---FIND OUT ALL THE DIFFERENT GENDER

SELECT DISTINCT sex FROM employee;


---FUNCTIONS IN SQL
#FINDING NO. OF EMPLOYEE
SELECT COUNT(emp_id) FROM employee;

#FIND HOW MANY EMPLOYEE HAVE SUPERVISORS
SELECT COUNT(super_id) FROM employee;

#FIND NO. OF FEMALE EMPLOYEE BORN AFTER 1970
SELECT COUNT(emp_id) FROM employee WHERE sex='F' AND birth_date>'1970-01-01'; 

#FIND AVERAGE OF ALL EMPLOYEE SALARY
SELECT AVG(salary) FROM employee;

#FIND THE SUM OF ALL EMPLOYEE SALARY
SELECT SUM(salary) FROM employee; 

#FIND OUT HOW MANY MALES AND HOW MANY FEMALE THERE ARE
SELECT COUNT(sex),sex FROM employee GROUP BY sex;

#FIND THE TOTAL SALES OF EACH SALESMAN

SELECT emp_id,COUNT(total_sales) FROM work_with GROUP BY emp_id;
SELECT emp_id,SUM(total_sales) FROM work_with GROUP BY emp_id;

#HOW MUCH MONEY EACH CLIENT SPENT
SELECT client_id,SUM(total_sales) FROM work_with GROUP BY client_id;






---WILDCARDS

#FIND ANY CLIENT WHO ARE AN LLC
SELECT * FROM client WHERE client_name LIKE '%LLC%';

#FIND ANY BRANCH SUPPLIERS WHO ARE IN LABEL BUSINESS
SELECT * FROM branch_supplier WHERE supplier_name LIKE '%LABELS%';

#FIND ANY EMPLOYEE BORN IN OCTOBER
SELECT * FROM employee WHERE birth_date LIKE '%-10-%';
#OR
SELECT * FROM employee WHERE birth_date LIKE '____-10%';


#FIND ANY CLIENT WHO ARE SCHOOLS
SELECT * FROM client WHERE client_name LIKE '%school%';






---UNION
#FIND A LIST OF EMPLOYEES AND BRANCH NAME
SELECT first_name FROM employee UNION SELECT branch_name FROM branch ;




---JOINS

#LETS INSERT ONE ROW IN BRANCH TABLE
INSERT INTO branch VALUES(4,'Buffalo',NULL,NULL);

#find all the branches and name of the managers
SELECT employee.emp_id,employee.first_name,branch.branch_name 
FROM employee
JOIN branch
ON emp_id=mgr_id;

#find all the branches and name of the managers ALONG WITH OTHER WORKERS
SELECT employee.emp_id,employee.first_name,branch.branch_name 
FROM employee
LEFT JOIN branch
ON emp_id=mgr_id;

#find all the branches and name of the managers INCLUDING ALL MEMBERS FROM BOTH TABLES
SELECT employee.emp_id,employee.first_name,branch.branch_name 
FROM employee
FULL OUTER JOIN branch
ON emp_id=mgr_id;


---NESTED QUERIES

#FIND NAMES OF ALLEMPLOYEERS WHO HAVE SOLD OVER 30,000 TO A SINGLE CLIENT
SELECT employee.first_name,employee.last_name 
FROM employee
WHERE employee.emp_id IN (
    SELECT work_with.emp_id
    FROM work_with 
    WHERE work_with.total_sales > 30000
);

#find the name of all the clients who are handled by the branch that mochael scott manages 
SELECT client.client_name 
FROM client
WHERE branch_id IN (
    SELECT employee.branch_id
    FROM employee
    WHERE employee.branch_id = 2
);






--- ON DELETE SET NULL
#SINCE 
#WHILE CREATING THE BRANCH TABLE WE USED ON DELETE SET NULL

DELETE FROM employee
WHERE emp_id = 102;

SELECT * FROM employee;
SELECT * FROM branch;


---ON DELETE SET CASCADE
#IN  SUPPLIER TABLE WE USED BRANCH ID AS ON DELETE CASCADE

DELETE FROM branch
WHERE branch_id=2; 



---Triggers
CREATE TABLE trigger_test (
    message VARCHAR(100)
);


DELIMITER $$
CREATE
    TRIGGER my_trigger BEFORE INSERT
    ON employee
    FOR EACH ROW BEGIN 
        INSERT INTO trigger_test VALUES('ADD NEW EMPLOYEE');
    END$$
DELIMITER ;


INSERT INTO employee
VALUES(109,'OSCAR','MARTINAZ','1968-02-19','M',69000,106,3);

SELECT * FROM trigger_test;



DELIMITER $$
CREATE
    TRIGGER my_trigger1 BEFORE INSERT
    ON employee
    FOR EACH ROW BEGIN 
        INSERT INTO trigger_test VALUES(NEW.first_name);
    END$$
DELIMITER ;


INSERT INTO employee
VALUES(110,'KEVIN','MALONE','1978-02-19','M',69000,106,3);



DELIMITER $$
CREATE
    TRIGGER my_trigger3 BEFORE INSERT
    ON employee
    FOR EACH ROW BEGIN 
         IF NEW.sex = 'M' THEN
                INSERT INTO trigger_test VALUES('added male employee');
         ELSEIF NEW.sex = 'F' THEN
                INSERT INTO trigger_test VALUES('added female');
         ELSE
                INSERT INTO trigger_test VALUES('added other employee');
         END IF;
    END$$
DELIMITER ;



INSERT INTO employee
VALUES(111,'PAM','BEESLY','1988-02-19','F',69000,106,3);

SELECT * FROM trigger_test;
